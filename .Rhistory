columns = (budget_execution_2021),
rows =(budget_execution_2021) < 0.9 ))%>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows = (budget_execution_2021)>= 1.1 & (budget_execution_2021) < 1.2))%>%
tab_style(style = cell_fill(color = "#ff989f",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows = (budget_execution_2021) >= 1.2 ))%>%
tab_footnote(
footnote = "Excluding M&O",
locations = cells_column_labels(
columns =c(expenditure_amt_2020, expenditure_amt_2021)))%>%
tab_header(
title = glue::glue(" COP2020 & COP2021 {ou} Financial Performance Summary"))%>%
gt::tab_source_note(("Created by the  EA Branch using the FY21Q4iFSD. For support please reach out to gh.oha.costingadvisors@usaid.gov"))
return(df)
}
get_ou_agency_be(df_fsd, "Democratic Republic of the Congo")
get_ou_agency_be<-function(df, ou="operatingunit"){
df<-df_fsd%>%
remove_mo()%>%
dplyr::filter(fiscal_year=="2020" | fiscal_year=="2021")%>%
dplyr::filter(operatingunit %in% ou)%>%
dplyr::select (c(fundingagency,fiscal_year,cop_budget_total,expenditure_amt))%>%
mutate_at(vars(cop_budget_total,expenditure_amt),~replace_na(.,0))%>%
dplyr::mutate(agency_category=fundingagency)%>%
mutate(agency_category  = ifelse(agency_category == "USAID", "USAID",
ifelse(agency_category  == "HHS/CDC", "CDC",
ifelse(agency_category  =="Dedup", "Dedup","Other"))))%>%
mutate( fundingagency = fct_relevel(fundingagency, "USAID","HHS/CDC","Other"))%>%
group_by(fundingagency,fiscal_year)%>%
summarise_at(vars(cop_budget_total,expenditure_amt), sum, na.rm = TRUE)%>%
dplyr::mutate(budget_execution=expenditure_amt/cop_budget_total)%>%
ungroup()%>%
pivot_wider(names_from = fiscal_year,values_from = cop_budget_total:budget_execution, values_fill = 0)%>%
dplyr::relocate(expenditure_amt_2020, .before = cop_budget_total_2020) %>%
dplyr::relocate(expenditure_amt_2021, .before = cop_budget_total_2021) %>%
dplyr::relocate(budget_execution_2021, .after = cop_budget_total_2021)%>%
dplyr::relocate(budget_execution_2020, .after = cop_budget_total_2020) %>%
gt()%>%
fmt_percent(
columns = c(`budget_execution_2020`, `budget_execution_2021`),
decimals = 0)%>%
fmt_currency( # add dolar signs
columns = c(`cop_budget_total_2020`,`expenditure_amt_2020`,`cop_budget_total_2021`,`expenditure_amt_2021` ),
decimals = 0,
currency = "USD")%>%
tab_options(
table.font.names = "Source Sans Pro"
) %>%
cols_width(
everything() ~ px(90))%>%
cols_label(
fundingagency = "Agency",
expenditure_amt_2020 = "Expenditure",
cop_budget_total_2020 = "Budget",
budget_execution_2020="Budget Execution",
#agency_category = "Agency",
expenditure_amt_2021 = "Expenditure",
cop_budget_total_2021 = "Budget",
budget_execution_2021="Budget Execution"
)%>%
tab_spanner(
label = "COP21 Performance",
columns = c(
expenditure_amt_2021,cop_budget_total_2021, budget_execution_2021,))%>%
tab_spanner(
label = "COP20 Performance",
columns = c(
expenditure_amt_2020,cop_budget_total_2020,budget_execution_2020))%>%
gt::tab_style(
style = list(
gt::cell_text(weight = "bold")),
locations = gt::cells_column_spanners(spanners = tidyselect::everything())
)%>%
tab_style(
style = cell_text(weight = 700),
locations = cells_body(
columns = tidyselect::contains("_execution_")
))%>%
gt::tab_options(
source_notes.font.size = 8,
table.font.size = 13,
data_row.padding = gt::px(5),
source_notes.padding = gt::px(1),) %>%
tab_style(
style = cell_borders(
sides = "right",
weight = px(1.5),
),
locations = cells_body(
columns = everything(),
rows = everything()
))%>%
cols_align(
align = "center",
columns = everything()
)%>%
cols_align(
align = "left",
columns = tidyselect::contains("agency")
)%>%
tab_style(style = cell_fill(color = "#5bb5d5",alpha = .75),
locations = cells_body(
columns = (budget_execution_2020),
rows = (budget_execution_2020) >= 0.9 & (budget_execution_2020) < 1.1)) %>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2020),
rows =(budget_execution_2020) < 0.9 ))%>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2020),
rows = (budget_execution_2020)>= 1.1 & (budget_execution_2020) < 1.2))%>%
tab_style(style = cell_fill(color = "#ff989f",alpha = .75),
locations = cells_body(
columns = (budget_execution_2020),
rows = (budget_execution_2020) >= 1.2 ))%>%
tab_style(style = cell_fill(color = "#5bb5d5",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows = (budget_execution_2021) >= 0.9 & (budget_execution_2021) < 1.1)) %>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows =(budget_execution_2021) < 0.9 ))%>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows = (budget_execution_2021)>= 1.1 & (budget_execution_2021) < 1.2))%>%
tab_style(style = cell_fill(color = "#ff989f",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows = (budget_execution_2021) >= 1.2 ))%>%
tab_footnote(
footnote = "Excluding M&O",
locations = cells_column_labels(
columns = tidyselect::contains("_expenditure_")))%>%
tab_header(
title = glue::glue(" COP2020 & COP2021 {ou} Financial Performance Summary"))%>%
gt::tab_source_note(("Created by the  EA Branch using the FY21Q4iFSD. For support please reach out to gh.oha.costingadvisors@usaid.gov"))
return(df)
}
get_ou_agency_be(df_fsd, "South Africa")
get_ou_agency_be<-function(df, ou="operatingunit"){
df<-df_fsd%>%
remove_mo()%>%
dplyr::filter(fiscal_year=="2020" | fiscal_year=="2021")%>%
dplyr::filter(operatingunit %in% ou)%>%
dplyr::select (c(fundingagency,fiscal_year,cop_budget_total,expenditure_amt))%>%
mutate_at(vars(cop_budget_total,expenditure_amt),~replace_na(.,0))%>%
dplyr::mutate(agency_category=fundingagency)%>%
mutate(agency_category  = ifelse(agency_category == "USAID", "USAID",
ifelse(agency_category  == "HHS/CDC", "CDC",
ifelse(agency_category  =="Dedup", "Dedup","Other"))))%>%
mutate( fundingagency = fct_relevel(fundingagency, "USAID","HHS/CDC","Other"))%>%
group_by(fundingagency,fiscal_year)%>%
summarise_at(vars(cop_budget_total,expenditure_amt), sum, na.rm = TRUE)%>%
dplyr::mutate(budget_execution=expenditure_amt/cop_budget_total)%>%
ungroup()%>%
pivot_wider(names_from = fiscal_year,values_from = cop_budget_total:budget_execution, values_fill = 0)%>%
dplyr::relocate(expenditure_amt_2020, .before = cop_budget_total_2020) %>%
dplyr::relocate(expenditure_amt_2021, .before = cop_budget_total_2021) %>%
dplyr::relocate(budget_execution_2021, .after = cop_budget_total_2021)%>%
dplyr::relocate(budget_execution_2020, .after = cop_budget_total_2020) %>%
gt()%>%
fmt_percent(
columns = c(`budget_execution_2020`, `budget_execution_2021`),
decimals = 0)%>%
fmt_currency( # add dolar signs
columns = c(`cop_budget_total_2020`,`expenditure_amt_2020`,`cop_budget_total_2021`,`expenditure_amt_2021` ),
decimals = 0,
currency = "USD")%>%
tab_options(
table.font.names = "Source Sans Pro"
) %>%
cols_width(
everything() ~ px(90))%>%
cols_label(
fundingagency = "Agency",
expenditure_amt_2020 = "Expenditure",
cop_budget_total_2020 = "Budget",
budget_execution_2020="Budget Execution",
#agency_category = "Agency",
expenditure_amt_2021 = "Expenditure",
cop_budget_total_2021 = "Budget",
budget_execution_2021="Budget Execution"
)%>%
tab_spanner(
label = "COP21 Performance",
columns = c(
expenditure_amt_2021,cop_budget_total_2021, budget_execution_2021,))%>%
tab_spanner(
label = "COP20 Performance",
columns = c(
expenditure_amt_2020,cop_budget_total_2020,budget_execution_2020))%>%
gt::tab_style(
style = list(
gt::cell_text(weight = "bold")),
locations = gt::cells_column_spanners(spanners = tidyselect::everything())
)%>%
tab_style(
style = cell_text(weight = 700),
locations = cells_body(
columns = tidyselect::contains("_execution_")
))%>%
gt::tab_options(
source_notes.font.size = 8,
table.font.size = 13,
data_row.padding = gt::px(5),
source_notes.padding = gt::px(1),) %>%
tab_style(
style = cell_borders(
sides = "right",
weight = px(1.5),
),
locations = cells_body(
columns = everything(),
rows = everything()
))%>%
cols_align(
align = "center",
columns = everything()
)%>%
cols_align(
align = "left",
columns = tidyselect::contains("agency")
)%>%
tab_style(style = cell_fill(color = "#5bb5d5",alpha = .75),
locations = cells_body(
columns = (budget_execution_2020),
rows = (budget_execution_2020) >= 0.9 & (budget_execution_2020) < 1.1)) %>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2020),
rows =(budget_execution_2020) < 0.9 ))%>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2020),
rows = (budget_execution_2020)>= 1.1 & (budget_execution_2020) < 1.2))%>%
tab_style(style = cell_fill(color = "#ff989f",alpha = .75),
locations = cells_body(
columns = (budget_execution_2020),
rows = (budget_execution_2020) >= 1.2 ))%>%
tab_style(style = cell_fill(color = "#5bb5d5",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows = (budget_execution_2021) >= 0.9 & (budget_execution_2021) < 1.1)) %>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows =(budget_execution_2021) < 0.9 ))%>%
tab_style(style = cell_fill(color = "#ffcaa2",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows = (budget_execution_2021)>= 1.1 & (budget_execution_2021) < 1.2))%>%
tab_style(style = cell_fill(color = "#ff989f",alpha = .75),
locations = cells_body(
columns = (budget_execution_2021),
rows = (budget_execution_2021) >= 1.2 ))%>%
tab_footnote(
footnote = "Excluding M&O",
locations = cells_column_labels(
columns =c(expenditure_amt_2020, expenditure_amt_2021)))%>%
tab_header(
title = glue::glue(" COP2020 & COP2021 {ou} Financial Performance Summary"))%>%
gt::tab_source_note(("Created by the  EA Branch using the FY21Q4iFSD. For support please reach out to gh.oha.costingadvisors@usaid.gov"))
return(df)
}
get_ou_agency_be(df_fsd, "South Africa")
library(glamr)
library(gophr)
library(googlesheets4)
library(glue)
library(googledrive)
library(janitor)
library(fs)
load_secrets()
df_fsd<-si_path()%>%
return_latest("Fin")%>%
gophr::read_msd()
df_totals <- df_fsd %>%
filter(fundingagency == "USAID") %>%
remove_mo()%>%
filter(planning_cycle =="COP20")%>%
mutate(country = ifelse(operatingunit == countryname, operatingunit, glue("{operatingunit}-{countryname}")))%>%
mutate("Program Area: Sub Program Area-Service Level"=glue("{program}: {sub_program}- {interaction_type}"))%>%
mutate("Beneficiary-Sub Beneficiary"=glue("{beneficiary}- {sub_beneficiary}"))%>%
mutate("Cost Category-Sub Cost Category"=glue("{cost_category}- {sub_cost_category}"))
library(tidyverse)
df_totals <- df_fsd %>%
filter(fundingagency == "USAID") %>%
remove_mo()%>%
filter(planning_cycle =="COP20")%>%
mutate(country = ifelse(operatingunit == countryname, operatingunit, glue("{operatingunit}-{countryname}")))%>%
mutate("Program Area: Sub Program Area-Service Level"=glue("{program}: {sub_program}- {interaction_type}"))%>%
mutate("Beneficiary-Sub Beneficiary"=glue("{beneficiary}- {sub_beneficiary}"))%>%
mutate("Cost Category-Sub Cost Category"=glue("{cost_category}- {sub_cost_category}"))%>%
group_by(country, mech_code, mech_name, primepartner, fiscal_year, `Program Area: Sub Program Area-Service Level`,`Beneficiary-Sub Beneficiary`,`Cost Category-Sub Cost Category`)
View(df_totals)
df_msd<-si_path()%>%
glamr::return_latest("OU_IM")%>%
gophr::read_msd()
df_totals <- df_msd %>%
filter(!(indicator %in% c("HTS_RECENT", "HTS_TST", "HTS_TST_POS", "PrEP_NEW", "PrEP_CURR",
"TX_CURR", "TX_NEW", "TX_PVLS") & disagg == "KeyPop"),
fundingagency == "USAID") %>%
clean_indicator() %>%
mutate(country = ifelse(operatingunit == countryname, operatingunit, glue("{operatingunit}-{countryname}"))) %>%
group_by(country, psnu, mech_code, mech_name, primepartner, fiscal_year, indicator) %>%
summarise(targets = sum(targets, na.rm = TRUE)) %>%
ungroup() %>%
arrange(country, mech_code, indicator, psnu)
df_totals <- df_msd %>%
filter(!(indicator %in% c("HTS_RECENT", "HTS_TST", "HTS_TST_POS", "PrEP_NEW", "PrEP_CURR",
"TX_CURR", "TX_NEW", "TX_PVLS") & disagg == "KeyPop"),
fundingagency == "USAID") %>%
clean_indicator()
View(df_msd)
library(glamr)
library(gophr)
library(googlesheets4)
library(glue)
library(googledrive)
library(janitor)
library(tidyverse)
library(fs)
print_financial_cop20 <- function(mechs){
df_mech <- df_totals %>%
filter(mech_code == mechs)
df1<-df_mech %>%
adorn_totals("row",,,,-fiscal_year) %>%
tail(1)%>%as.vector()%>%
mutate(fiscal_year=as.integer(fiscal_year))
meta <- df_mech %>%
distinct(country, mech_code) %>%
mutate(country = str_remove_all(country, " |'"),
name = glue("ER21_Financial_Programmatic/COP20__ER_{country}_{mech_code}.csv"))
note2<-data.frame(country="The data above presents COP budgets, workplan budgets, and expenditures. Only workplan budgets and expenditure will have data at the cost category level.")
note3<-data.frame(country="For questions please reach out to the EA Branch at oha.ea@usaid.gov")
note1<-data.frame(country=" ")
df_mech<-bind_rows(df_mech,df1,note1,note2,note3)
print(glue("Printing...{meta$country}-{meta$mech_code}"))
write_csv(df_mech, file.path(meta$name), na = "")
}
df_fsd<-si_path()%>%
return_latest("Fin")%>%
gophr::read_msd()
df_totals <- df_fsd %>%
filter(fundingagency == "USAID") %>%
remove_mo()%>%
filter(planning_cycle =="COP20")%>%
mutate(country = ifelse(operatingunit == countryname, operatingunit, glue("{operatingunit}-{countryname}")))%>%
mutate("Program Area: Sub Program Area-Service Level"=glue("{program}: {sub_program}- {interaction_type}"))%>%
mutate("Beneficiary-Sub Beneficiary"=glue("{beneficiary}- {sub_beneficiary}"))%>%
mutate("Cost Category-Sub Cost Category"=glue("{cost_category}- {sub_cost_category}"))%>%
group_by(country, mech_code, mech_name, primepartner, fiscal_year, `Program Area: Sub Program Area-Service Level`,`Beneficiary-Sub Beneficiary`,`Cost Category-Sub Cost Category`) %>%
#group_by(country, mech_code, mech_name, primepartner, fiscal_year, `Program Area: Sub Program Area-Service Level`,`Beneficiary-Sub Beneficiary`)%>%
summarise_at(vars(cop_budget_total, workplan_budget_amt, expenditure_amt), sum, na.rm = TRUE) %>%
ungroup() %>%
arrange(country, mech_code)
mechs <- df_totals %>%
distinct(mech_code) %>%
pull()
dir_create("ER21_Financial_Programmatic")
walk(mechs,  print_financial_cop20)
# Functions
percent_clean<-function(x, y) {
ifelse(y > 0.000, (x / y), NA_real_)
}
df_msd<-si_path()%>%
glamr::return_latest("OU_IM")%>%
gophr::read_msd()
print_mer_cop20 <- function(mechs){
df_mech <- df %>%
filter(mech_code == mechs)
meta <- df_mech %>%
distinct(countryname, mech_code) %>%
mutate(countryname = str_remove_all(countryname, " |'"),
name = glue("ER21_Financial_Programmatic/COP20_MER_{countryname}_{mech_code}.csv"))
print(glue("Printing...{meta$mech_code}"))
write_csv(df_mech, file.path(meta$name), na = "")
}
df<-df_msd%>%
dplyr::filter(standardizeddisaggregate=="Total Numerator")%>%
dplyr::filter(fiscal_year=="2021")%>%
dplyr::filter(fundingagency=="USAID")%>%
select(fiscal_year,operatingunit,countryname,fundingagency,primepartner,mech_code,mech_name,indicator,targets,cumulative)%>%
group_by(countryname, mech_code, mech_name, primepartner, fiscal_year,indicator)%>%
summarise_at(vars(cumulative,targets), sum, na.rm = TRUE) %>%
ungroup() %>%
mutate(target_achievement=percent_clean(cumulative,targets))%>%
ungroup()%>%
arrange(countryname, mech_code)
#list of mechanism
mechs <- df %>%
distinct(mech_code) %>%
pull()
#create output budget files
walk(mechs,  print_mer_cop20)
df3<-as.data.frame(mechs)
View(df3)
print_mer_cop20 <- function(mechs){
df_mech <- df %>%
filter(mech_code == mechs)
meta <- df_mech %>%
distinct(countryname, mech_code) %>%
mutate(countryname = str_remove_all(countryname, " |'"),
name = glue("ER21_Financial_Programmatic/COP20_{countryname}_{mech_code}_MER.csv"))
print(glue("Printing...{meta$mech_code}"))
write_csv(df_mech, file.path(meta$name), na = "")
}
walk(mechs,  print_mer_cop20)
unlink("ER21_Financial_Programmatic", recursive = TRUE)
dir_create("ER21_Financial_Programmatic")
print_mer_cop20 <- function(mechs){
df_mech <- df %>%
filter(mech_code == mechs)
meta <- df_mech %>%
distinct(countryname, mech_code) %>%
mutate(countryname = str_remove_all(countryname, " |'"),
name = glue("ER21_Financial_Programmatic/COP20_{countryname}_{mech_code}_MER.csv"))
print(glue("Printing...{meta$mech_code}"))
write_csv(df_mech, file.path(meta$name), na = "")
}
#create output budget files
walk(mechs,  print_mer_cop20)
print_financial_cop20 <- function(mechs){
df_mech <- df_totals %>%
filter(mech_code == mechs)
df1<-df_mech %>%
adorn_totals("row",,,,-fiscal_year) %>%
tail(1)%>%as.vector()%>%
mutate(fiscal_year=as.integer(fiscal_year))
meta <- df_mech %>%
distinct(country, mech_code) %>%
mutate(country = str_remove_all(country, " |'"),
name = glue("ER21_Financial_Programmatic/COP20__{country}_{mech_code}_ER.csv"))
note2<-data.frame(country="The data above presents COP budgets, workplan budgets, and expenditures. Only workplan budgets and expenditure will have data at the cost category level.")
note3<-data.frame(country="For questions please reach out to the EA Branch at oha.ea@usaid.gov")
note1<-data.frame(country=" ")
df_mech<-bind_rows(df_mech,df1,note1,note2,note3)
print(glue("Printing...{meta$country}-{meta$mech_code}"))
write_csv(df_mech, file.path(meta$name), na = "")
}
library(glamr)
library(gophr)
library(googlesheets4)
library(glue)
library(googledrive)
library(janitor)
library(tidyverse)
library(fs)
df_fsd<-si_path()%>%
return_latest("Fin")%>%
gophr::read_msd()
# MUNGE ============================================================================
#get financial total
df_totals <- df_fsd %>%
filter(fundingagency == "USAID") %>%
remove_mo()%>%
filter(planning_cycle =="COP20")%>%
mutate(country = ifelse(operatingunit == countryname, operatingunit, glue("{operatingunit}-{countryname}")))%>%
mutate("Program Area: Sub Program Area-Service Level"=glue("{program}: {sub_program}- {interaction_type}"))%>%
mutate("Beneficiary-Sub Beneficiary"=glue("{beneficiary}- {sub_beneficiary}"))%>%
mutate("Cost Category-Sub Cost Category"=glue("{cost_category}- {sub_cost_category}"))%>%
group_by(country, mech_code, mech_name, primepartner, fiscal_year, `Program Area: Sub Program Area-Service Level`,`Beneficiary-Sub Beneficiary`,`Cost Category-Sub Cost Category`) %>%
#group_by(country, mech_code, mech_name, primepartner, fiscal_year, `Program Area: Sub Program Area-Service Level`,`Beneficiary-Sub Beneficiary`)%>%
summarise_at(vars(cop_budget_total, workplan_budget_amt, expenditure_amt), sum, na.rm = TRUE) %>%
ungroup() %>%
arrange(country, mech_code)
mechs <- df_totals %>%
distinct(mech_code) %>%
pull()
walk(mechs,  print_financial_cop20)
percent_clean<-function(x, y) {
ifelse(y > 0.000, (x / y), NA_real_)
}
# LOAD DATA ============================================================================
df_msd<-si_path()%>%
glamr::return_latest("OU_IM")%>%
gophr::read_msd()
print_mer_cop20 <- function(mechs){
df_mech <- df %>%
filter(mech_code == mechs)
meta <- df_mech %>%
distinct(countryname, mech_code) %>%
mutate(countryname = str_remove_all(countryname, " |'"),
name = glue("ER21_Financial_Programmatic/COP20_{countryname}_{mech_code}_MER.csv"))
print(glue("Printing...{meta$mech_code}"))
write_csv(df_mech, file.path(meta$name), na = "")
}
df<-df_msd%>%
dplyr::filter(standardizeddisaggregate=="Total Numerator")%>%
dplyr::filter(fiscal_year=="2021")%>%
dplyr::filter(fundingagency=="USAID")%>%
mutate(country = ifelse(operatingunit == countryname, operatingunit, glue("{operatingunit}-{countryname}")))%>%
select(fiscal_year,operatingunit,countryname,fundingagency,primepartner,mech_code,mech_name,indicator,targets,cumulative)%>%
group_by(countryname, mech_code, mech_name, primepartner, fiscal_year,indicator)%>%
summarise_at(vars(cumulative,targets), sum, na.rm = TRUE) %>%
ungroup() %>%
mutate(target_achievement=percent_clean(cumulative,targets))%>%
ungroup()%>%
arrange(countryname, mech_code)
#list of mechanism
mechs <- df %>%
distinct(mech_code) %>%
pull()
#create output budget files
walk(mechs,  print_mer_cop20)
