df_data <- read_xlsx(df, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL", "Notes/Comments", "DREAMS Budget"))
df <- df %>% gather(Quarter, Expenditure, c(5:16))
df <- df %>% mutate(`Type of Expenditure` = case_when(
startsWith(Quarter, "Expenditure (excl") ~ "Expenditure Only",
startsWith(Quarter, "PEPFAR ARPA") ~ "ARPA Expenditure",
startsWith(Quarter, "DREAMS / OVC") ~ "DREAMS/OVC Expenditure"
))
df <- df %>% dplyr::mutate(`Quarter` = ifelse(grepl('Q1', df$Quarter), 'Q1',
ifelse(grepl('Q2', df$Quarter), 'Q2',
ifelse(grepl('Q3', df$Quarter), 'Q3',
ifelse(grepl('Q4', df$Quarter), 'Q4', "NA")))))
df <- df %>%
separate(col="Program Area",
into=c("Program Area", "Sub-Program Area"), sep=":.") %>%
separate(col="Beneficiary",
into=c("Beneficiary", "Sub-Beneficiary"), sep=":.") %>%
separate(col="Cost Categories",
into=c("Cost Category", "Sub-Cost Category"), sep=":.")
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`Expenditure`=as.numeric(`Expenditure`))
df <- df %>%dplyr::mutate_at(vars(`Expenditure`),~replace_na(.,0)) %>%
dplyr::filter(`Expenditure` !=0)
return(df)
}
kenya_er<- purrr::map_dfr(.x = kenya_data,
.f = ~ quarterly_expenditure(.x))
write_csv(df,"C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Quarterly Data.csv")
#Quarterly
write_csv(df,"C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Quarterly_Data.csv")
View(kenya_er)
write_csv(kenya_er,"C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Quarterly_Data.csv")
dreams <- function(df){
df_id <-read_xlsx(df,2)
df_data <- read_xlsx(df, 1, skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", 7:23))
df <- df %>% drop_na(`Program Area`)
df <- df %>%dplyr::mutate_at(vars(`DREAMS Budget`),~replace_na(.,0)) %>%
dplyr::filter(`DREAMS Budget` !=0)
return(df)
}
kenya_dreams<- purrr::map_dfr(.x = kenya_data,
.f = ~ dreams(.x))
rlang::last_error()
df_id <-read_xlsx(singlemech,2)
singlemech <-("C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Kenya_84484_Quarterly_template.xlsx")
df_id <-read_xlsx(singlemech,2)
View(df_id)
glimpse()
glimpse(df_id)
dreams <- function(df){
df_id <-read_xlsx(df,2)
df_data <- read_xlsx(df, 1, skip = 2, n_max = 2)
glimpse(df_id)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", 7:23))
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`DREAMS Budget`=as.numeric(`DREAMS Budget`))
df <- df %>%dplyr::mutate_at(vars(`DREAMS Budget`),~replace_na(.,0)) %>%
dplyr::filter(`DREAMS Budget` !=0)
return(df)
}
kenya_dreams<- purrr::map_dfr(.x = kenya_data,
.f = ~ dreams(.x))
View(kenya_dreams)
View(kenya_dreams)
write_csv(kenya_dreams,"C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Dreams Budget.csv")
workplan <- function(df){
df_id <-read_xlsx(df,2)
df_data <- read_xlsx(df, 1, skip = 2, n_max = 2)
glimpse(df_id)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("DREAMS Budget", "Quarter", 7:23))
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`Work Plan Budget`=as.numeric(`Work Plan Budget`))
df <- df %>%dplyr::mutate_at(vars(`Work Plan Budget`),~replace_na(.,0)) %>%
dplyr::filter(`Work Plan Budget` !=0)
return(df)
}
kenya_wp<- purrr::map_dfr(.x = kenya_data,
.f = ~ workplan(.x))
View(kenya_wp)
workplan <- function(df){
df_id <-read_xlsx(df,2)
df_data <- read_xlsx(df, 1, skip = 2, n_max = 2)
glimpse(df_id)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("DREAMS Budget", "Quarter", 7:23))
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`Work Plan Budget`=as.numeric(`Work Plan Budget`))
df <- df %>%dplyr::mutate_at(vars(`Work Plan Budget`),~replace_na(.,0)) %>%
dplyr::filter(`Work Plan Budget` !=0)
df <- df %>%
separate(col="Program Area",
into=c("Program Area", "Sub-Program Area"), sep=":.") %>%
separate(col="Beneficiary",
into=c("Beneficiary", "Sub-Beneficiary"), sep=":.") %>%
separate(col="Cost Categories",
into=c("Cost Category", "Sub-Cost Category"), sep=":.")
return(df)
}
kenya_wp<- purrr::map_dfr(.x = kenya_data,
.f = ~ workplan(.x))
write_csv(kenya_wp,"C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Budget.csv")
singlemech <-("C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Kenya_84485_Quarterly_template_V2.xlsx")
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL", "Notes/Comments", "DREAMS Budget"))
singlemech <-("C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Kenya_84485_Quarterly_template_V2.xlsx")
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL", "Notes/Comments", "DREAMS Budget"))
View(df)
df<- df %>% dplyr::select(-c(5,9))
View(df)
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL", "Notes/Comments", "DREAMS Budget"))
View(df)
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
View(df)
df <- df %>% gather(Quarter, Expenditure, c(5:16))
View(df)
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
View(df)
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL","PEPFAR Expenditures Total", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL","PEPFAR ARPA Expenditures Total", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL","PEPFAR ARPA Expenditures TOTAL", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
View(df)
df <- df %>% gather(Quarter, Expenditure, c(5:9))
df <- df %>% mutate(`Type of Expenditure` = case_when(
startsWith(Quarter, "Expenditure (excl") ~ "Expenditure Only",
startsWith(Quarter, "PEPFAR ARPA") ~ "ARPA Expenditure",
startsWith(Quarter, "DREAMS / OVC") ~ "DREAMS/OVC Expenditure",
startsWith(Quarter, "PIOET") ~ "PIOET-COVID Expenditures"
))
df <- df %>% dplyr::mutate(`Quarter` = ifelse(grepl('Q1', df$Quarter), 'Q1',
ifelse(grepl('Q2', df$Quarter), 'Q2',
ifelse(grepl('Q3', df$Quarter), 'Q3',
ifelse(grepl('Q4', df$Quarter), 'Q4', "NA")))))
df <- df %>%
separate(col="Program Area",
into=c("Program Area", "Sub-Program Area"), sep=":.") %>%
separate(col="Beneficiary",
into=c("Beneficiary", "Sub-Beneficiary"), sep=":.") %>%
separate(col="Cost Categories",
into=c("Cost Category", "Sub-Cost Category"), sep=":.")
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`Expenditure`=as.numeric(`Expenditure`))
df <- df %>%dplyr::mutate_at(vars(`Expenditure`),~replace_na(.,0)) %>%
dplyr::filter(`Expenditure` !=0)
View(df)
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL","PEPFAR ARPA Expenditures TOTAL", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
df <- df %>% gather(Quarter, Expenditure, c(5:9))
View(df)
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL","PEPFAR ARPA Expenditures TOTAL", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
View(df)
df <- df %>% gather(Quarter, Expenditure, c(5:13))
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL","PEPFAR ARPA Expenditures TOTAL", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
df <- df %>% gather(Quarter, Expenditure, c(5:13))
df <- df %>% mutate(`Type of Expenditure` = case_when(
startsWith(Quarter, "Expenditure (excl") ~ "Expenditure Only",
startsWith(Quarter, "PEPFAR ARPA") ~ "ARPA Expenditure",
startsWith(Quarter, "DREAMS / OVC") ~ "DREAMS/OVC Expenditure",
startsWith(Quarter, "PIOET") ~ "PIOET-COVID Expenditures"
))
df <- df %>% dplyr::mutate(`Quarter` = ifelse(grepl('Q1', df$Quarter), 'Q1',
ifelse(grepl('Q2', df$Quarter), 'Q2',
ifelse(grepl('Q3', df$Quarter), 'Q3',
ifelse(grepl('Q4', df$Quarter), 'Q4', "NA")))))
df <- df %>%
separate(col="Program Area",
into=c("Program Area", "Sub-Program Area"), sep=":.") %>%
separate(col="Beneficiary",
into=c("Beneficiary", "Sub-Beneficiary"), sep=":.") %>%
separate(col="Cost Categories",
into=c("Cost Category", "Sub-Cost Category"), sep=":.")
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`Expenditure`=as.numeric(`Expenditure`))
df <- df %>%dplyr::mutate_at(vars(`Expenditure`),~replace_na(.,0)) %>%
dplyr::filter(`Expenditure` !=0)
View(df)
df_id <- read_xlsx(singlemech,"IM data")
df_data <- read_xlsx(singlemech, "Notes and Data Dictionary", skip = 2, n_max = 2)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", "TOTAL Expenditure","PIOET-COVID Expenditures TOTAL",
"Expenditure (excl ARPA, DREAMS, OVC) TOTAL":"DREAMS / OVC Expenditure TOTAL","PEPFAR ARPA Expenditures TOTAL", "Notes/Comments", "DREAMS Budget"))
df<- df %>% dplyr::select(-c(5,7:9,11:12,15:16))
df <- df %>% gather(Quarter, Expenditure, c(5:13))
df <- df %>% mutate(`Type of Expenditure` = case_when(
startsWith(Quarter, "Expenditure (excl") ~ "Expenditure Only",
startsWith(Quarter, "PEPFAR ARPA") ~ "ARPA Expenditure",
startsWith(Quarter, "DREAMS / OVC") ~ "DREAMS/OVC Expenditure",
startsWith(Quarter, "PIOET") ~ "PIOET-COVID Expenditures"
))
df <- df %>% dplyr::mutate(`Quarter` = ifelse(grepl('Q1', df$Quarter), 'Q1',
ifelse(grepl('Q2', df$Quarter), 'Q2',
ifelse(grepl('Q3', df$Quarter), 'Q3',
ifelse(grepl('Q4', df$Quarter), 'Q4', "NA")))))
df <- df %>%
separate(col="Program Area",
into=c("Program Area", "Sub-Program Area"), sep=":.") %>%
separate(col="Beneficiary",
into=c("Beneficiary", "Sub-Beneficiary"), sep=":.") %>%
separate(col="Cost Categories",
into=c("Cost Category", "Sub-Cost Category"), sep=":.")
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`Expenditure`=as.numeric(`Expenditure`))
df_84485 <- df %>%dplyr::mutate_at(vars(`Expenditure`),~replace_na(.,0)) %>%
dplyr::filter(`Expenditure` !=0)
kenya_er_v2 <- bind_rows(kneya_er, df_84485)
kenya_er_v2 <- bind_rows(kenya_er, df_84485)
View(kenya_er_v2)
kenya_data<-list.files(here("Quarterly Expenditure Template/Kenya Quarterly"),full.names = TRUE)
dreams <- function(df){
df_id <-read_xlsx(df,2)
df_data <- read_xlsx(df, 1, skip = 2, n_max = 2)
glimpse(df_id)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("Work Plan Budget", "Quarter", 7:23))
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`DREAMS Budget`=as.numeric(`DREAMS Budget`))
df <- df %>%dplyr::mutate_at(vars(`DREAMS Budget`),~replace_na(.,0)) %>%
dplyr::filter(`DREAMS Budget` !=0)
return(df)
}
workplan <- function(df){
df_id <-read_xlsx(df,2)
df_data <- read_xlsx(df, 1, skip = 2, n_max = 2)
glimpse(df_id)
df_mech <- cbind(df_id,df_data)
df <- df_mech %>% dplyr::select(-c("DREAMS Budget", "Quarter", 7:23))
df <- df %>% drop_na(`Program Area`)
df <- df %>% dplyr::mutate(`Work Plan Budget`=as.numeric(`Work Plan Budget`))
df <- df %>%dplyr::mutate_at(vars(`Work Plan Budget`),~replace_na(.,0)) %>%
dplyr::filter(`Work Plan Budget` !=0)
df <- df %>%
separate(col="Program Area",
into=c("Program Area", "Sub-Program Area"), sep=":.") %>%
separate(col="Beneficiary",
into=c("Beneficiary", "Sub-Beneficiary"), sep=":.") %>%
separate(col="Cost Categories",
into=c("Cost Category", "Sub-Cost Category"), sep=":.")
return(df)
}
kenya_dreams<- purrr::map_dfr(.x = kenya_data,
.f = ~ dreams(.x))
kenya_data<-list.files(here("Quarterly Expenditure Template/Kenya Quarterly"),full.names = TRUE)
kenya_dreams<- purrr::map_dfr(.x = kenya_data,
.f = ~ dreams(.x))
kenya_wp<- purrr::map_dfr(.x = kenya_data,
.f = ~ workplan(.x))
write_csv(kenya_er_v2,"C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Quarterly_Data.csv")
write_csv(kenya_dreams,"C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Dreams Budget.csv")
write_csv(kenya_wp,"C:/Users/jmontespenaloza/Documents/Quarterly Expenditure Template/Kenya Quarterly/Budget.csv")
View(kenya_wp)
View(kenya_dreams)
library(gagglr)
install.packages("gagglr")
library(dplyr)
library(tidyverse)
library(tidyr)
library(readr)
library(readxl)
library(here)
library(glamr)
library(purrr)
library(data.table)
library(splitstackshape)
library(gophr)
library(devtools)
library(tibble)
library(gagglr)
install.packages("gagglr")
library(gagglr)
library(glamr)
library(gophr)
library(googledrive)
library(glue)
library(tidyverse)
library(httpuv)
library(openxlsx)
library(glamr)
library(gophr)
library(googledrive)
library(glue)
library(tidyverse)
library(fs)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
if(!require(openxlsx)){install.packages(packageurl, repos=NULL, type="source")
} else if (packageVersion('openxlsx') != "4.2.3"){
detach("package:openxlsx", unload=TRUE)
install.packages(packageurl, repos=NULL, type="source")}
if(!require(remotes)){install.packages("remotes")}
if(!require(httpuv)){install.packages('httpuv')}
if(!require(glamr)){remotes::install_github("USAID-OHA-SI/glamr", build_vignettes = TRUE)}
if(!require(gophr)){remotes::install_github("USAID-OHA-SI/gophr", build_vignettes = TRUE)}
home_dir <- "C:/Users/jmontespenaloza/Documents"
uploader_path <- "GitHub/EA-Utilities/upload_dir_to_gdrive.R"
# Use google drive uploader function
source(glue("{home_dir}/{uploader_path}"))
template_style <- createStyle(fgFill = "#dcdcdc")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/openxlsx/openxlsx_4.2.3.tar.gz"
if(!require(openxlsx)){install.packages(packageurl, repos=NULL, type="source")
} else if (packageVersion('openxlsx') != "4.2.3"){
detach("package:openxlsx", unload=TRUE)
install.packages(packageurl, repos=NULL, type="source")}
if(!require(remotes)){install.packages("remotes")}
if(!require(httpuv)){install.packages('httpuv')}
if(!require(glamr)){remotes::install_github("USAID-OHA-SI/glamr", build_vignettes = TRUE)}
if(!require(gophr)){remotes::install_github("USAID-OHA-SI/gophr", build_vignettes = TRUE)}
template_style <- createStyle(fgFill = "#dcdcdc")
library(httpuv)
library(openxlsx)
library(glamr)
library(gophr)
library(googledrive)
library(glue)
library(tidyverse)
library(fs)
template_style <- createStyle(fgFill = "#dcdcdc")
df_all_cell_style <- createStyle(border = "TopBottomLeftRight", borderStyle = 'thin')
# Style Excel Workbook column to have currency sign
dollar_cell <- createStyle(numFmt = '_($* #,##0_);_($* (#,##0);_($* "-"??_);_(@_)')
gen_df_template <- function(df, drop_workplan, drop_cost){
# Concat columns
df_temp <- df %>%
add_column("program: sub_program" = glue("{.$program}: {.$sub_program}"),
.before = "program") %>%
add_column("beneficiary: sub_beneficiary" = glue("{.$beneficiary}: {.$sub_beneficiary}"),
.before = "beneficiary")
if (drop_cost){
df_temp <- df_temp %>%
group_by(`program: sub_program`, interaction_type, `beneficiary: sub_beneficiary`) %>%
summarize_at(vars(workplan_budget_amt, expenditure_amt), sum, na.rm=T)
} else{
drop_cols_cost <- c("cop_budget_total", "operatingunit", "countryname",
"primepartner", "mech_name", "mech_code",
"program", "sub_program", "beneficiary", "sub_beneficiary",
"cost_category", "sub_cost_category",
"planning_cycle", "fiscal_year")
df_temp <- df_temp %>%
add_column("cost_category: sub_cost_category" = glue("{.$cost_category}: {.$sub_cost_category}"),
.before = "cost_category") %>%
select(-drop_cols_cost)
}
if (drop_workplan){
df_temp <- df_temp %>% select(-workplan_budget_amt)
}
return(df_temp)
}
wb_pipeline <- function(mech, templ_type, dr = "", df = df_fsd){
# filter data.frame for one single mechanism
df_mech <- df %>% dplyr::filter(mech_code == mech)
# Generate correct columns and group_by sums
df_template <- gen_df_template(df_mech, drop_workplan, drop_cost)
# 3 if-statements to test if the template_type is ARPA, DREAMS, or Quarterly
if (templ_type=="ARPA"){
# Add empty columns so that column headers correctly display in Excel
df_template <- df_template %>%
add_column(ipc_cse = NA,
ipc_hrh = NA,
ipc_other = NA)
} else if(templ_type == "DREAMS"){
df_template <- df_template %>%
add_column(dreams_budget = NA,
expenditureeeee = NA,
expenditure_Q2 = NA,
dreams_budget_amt_Q2 = NA,
dreams_expenditure_amt_Q2 = NA,
expenditure_Q3 = NA,
dreams_budget_amt_Q3 = NA,
dreams_expenditure_amt_Q3 = NA,
expenditure_Q4 = NA,
dreams_budget_amt_Q4 = NA,
dreams_expenditure_amt_Q4 = NA,
Notes_Comments= NA,
Expenditure_total= NA)
} else if(templ_type == "Quarterly"){
# set all Expenditure amounts to null, as that is the column mechs will fill out quarterly
df_template$expenditure_amt <- NA
} else{
stop("Error! Pick template_type that is ARPA, DREAMS, or Quarterly")
}
# Number of columns in the dataframe, to add formatting correctly later
num_cols <- ncol(df_template)
# Save country/OU name, prime name, and mechanism name/ID as a list, for later reference
# NOTE: if column order changes, this code will break
mech_id <- df_mech[1,c(1:5, 14)]
# Add empty column for Quarter input. If TRUE, adds "Quarter" box to fill out on 1st page of template
if (add_quarter){
mech_id$Quarter <- ""
}
# For now, just store template in same folder as R code and load it. Otherwise, change templatePath
wb <- loadWorkbook(templatePath)
# Use openxlsx to write in mech ID and financidal data in the approrpiate sheets
### See: https://ycphs.github.io/openxlsx/reference/writeData.html
### Note: colNames and withFilter BOTH need to be FALSE to avoid column headers
writeData(wb, sheet = 1, x = mech_id, startRow = 4, colNames = FALSE, withFilter = FALSE)
writeData(wb, sheet = 2, x = df_template, startRow = 2, colNames = FALSE, withFilter=FALSE)
# Set varying start column for formatting based on if using cost categories
if (drop_cost){
start_col <- 4
} else{
start_col <- 5
}
# Set varying end column for where to format grey background fill to, depending on template type
if(template_type == "ARPA" | template_type=="Quarterly"){
fill_col <- start_col
}else if(template_type == "DREAMS"){
fill_col <- start_col
}
# Add styles based on the styles we created earlier. See: https://ycphs.github.io/openxlsx/reference/addStyle.html
addStyle(wb, sheet = 2, template_style, rows = 2:200, cols = 1:fill_col,
gridExpand = TRUE, stack = TRUE)
addStyle(wb, sheet = 2, df_all_cell_style, rows = 2:200, cols = 1:num_cols,
gridExpand = TRUE, stack = T)
addStyle(wb, sheet = 2, dollar_cell, rows = 2:200, cols=start_col:num_cols, gridExpand=T, stack=T)
# Save ARPA template
#file_name <- glue("{dr}{mech_id[2]}_{mech_id[4]}_{template_type}_template.xlsx")
file_name <- glue("{dr}{mech_id[2]}_{mech_id[4]}_Expenditure_Template.xlsx")
saveWorkbook(wb, file_name, overwrite = TRUE)
return(df_template)
}
progress_tracker <- function(track_num, global_progress = global_progress,
total_files = total_files, func, ...){
if (global_progress == 1){
cat("Starting building files\n")
}
if (global_progress %% track_num == 0){
cat("Building", global_progress, "out of", total_files, "files\n", sep = " ")
}
# Function that progress_tracker is wrapping goes here
output <- func(...)
global_progress <<- global_progress + 1
if (global_progress == total_files){
cat("Finished building all files.\n")
global_progress <<- 1
}
return(output)
}
df_lst_arpa <- read.xlsx("PEPFAR ARPA Budgets by USAID Mechanism.xlsx", startRow=3)
df_fsd_full <-glamr::si_path()%>%
return_latest("Fin")%>%
gophr::read_msd()
df_msd<-si_path()%>%
glamr::return_latest("OU_IM")%>%
gophr::read_msd()
df_fsd<-si_path()%>%
return_latest("Fin")%>%
gophr::read_msd()
df_fsd<-si_path()%>%
return_latest("Fin")
df_fsd <- df_fsd_full %>%
dplyr::filter(fundingagency == "USAID" | fundingagency=="USAID/WCF",
fiscal_year == curr_year) %>%
remove_mo()
